{
    "openapi": "3.0.0",
    "info": {
        "title": "DailyTasks API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "API server (development)"
        }
    ],
    "paths": {
        "/api/tag": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "List tags",
                "description": "Listing of all tags of the current user.",
                "operationId": "05429641ff2d4731ad9bc60b1c0e138c",
                "responses": {
                    "200": {
                        "description": "Listed tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tag"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Create new tag",
                "description": "Create new tag for the current user.",
                "operationId": "d0eb902a938b5cd865c3a6efce14c0b1",
                "requestBody": {
                    "description": "Tag object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the tag",
                                        "type": "string",
                                        "example": "Personal"
                                    },
                                    "color": {
                                        "description": "Color of the tag in hex format",
                                        "type": "string",
                                        "example": "#0066aa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tag created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tag"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tag/{id}": {
            "put": {
                "tags": [
                    "Tags"
                ],
                "summary": "Update selected tag",
                "description": "Update selected tag of the current user.",
                "operationId": "136a6d25ad8f7d4e9409b189bf3056e3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tag",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Tag object that needs to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the tag",
                                        "type": "string",
                                        "example": "Other"
                                    },
                                    "color": {
                                        "description": "Color of the tag in hex format",
                                        "type": "string",
                                        "example": "#a66666"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tag updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tag"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tags"
                ],
                "summary": "Delete selected tag",
                "description": "Delete selected tag of the current user.",
                "operationId": "afecbd0d82f4fba14e7fb92f441e8ea6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tag",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tag deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "List tasks",
                "description": "Listing of all tasks of the current user.",
                "operationId": "a6414b92dfc277535c00935788507b36",
                "responses": {
                    "200": {
                        "description": "Listed tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create new task",
                "description": "Create new task for the current user.",
                "operationId": "ebdc575ef133bfb05ef92a8e84f54da8",
                "requestBody": {
                    "description": "Task object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "targeted_at"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the new task",
                                        "type": "string",
                                        "example": "New task"
                                    },
                                    "targeted_at": {
                                        "description": "Date-time on which is task targeted.",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2026-01-02 13:45:56"
                                    },
                                    "fulfilled_at": {
                                        "description": "Date-time on which was task fulfilled.",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2026-01-02 13:46:00"
                                    },
                                    "status": {
                                        "description": "Status of the task (default value `ongoing`).",
                                        "type": "string",
                                        "enum": [
                                            "ongoing",
                                            "finished",
                                            "postponed",
                                            "cancelled"
                                        ],
                                        "example": "ongoing"
                                    },
                                    "tags": {
                                        "description": "Array of tag identifiers.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register new user",
                "description": "Registration for the new users.",
                "operationId": "df1ca50c32c4c932c79956c52c87eaab",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Jane Doe",
                                    "email": "jane.doe@mail.com",
                                    "password": "password"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registration was successfull",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "4|xwf3ePQY97AJDiLLfDrwrK01hRshR12dZcBCLMms72515fcf"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Doe"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registration was successfull"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User login",
                "description": "Attempt to login user and retrieve its access token.",
                "operationId": "e2f16b490348a902bb9994972e2d20af",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "4|xwf3ePQY97AJDiLLfDrwrK01hRshR12dZcBCLMms72515fcf"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Test User"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                }
            }
        },
        "/api/user/info": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "User info",
                "description": "Give informations about currently logged user.",
                "operationId": "cdf71a463c6c18c5370d453b2fbd0437",
                "responses": {
                    "200": {
                        "description": "Logged user info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/unregister": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Unregister logged user",
                "description": "User will be unregistred and __deleted__ thus __all its data will be erased__.",
                "operationId": "05c829837ebc02ac491146130968e5da",
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Tag": {
                "title": "Tag",
                "description": "Single task's tag",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the tag",
                        "type": "string",
                        "example": "Personal"
                    },
                    "color": {
                        "description": "Color of the tag in hex format",
                        "format": "string",
                        "example": "#0066aa"
                    }
                },
                "type": "object"
            },
            "Task": {
                "title": "Task",
                "description": "Single task",
                "required": [
                    "name",
                    "targeted_at"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the task",
                        "type": "string",
                        "example": "Personal"
                    },
                    "targeted_at": {
                        "description": "Date-time to when is task targeted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fulfilled_at": {
                        "description": "Date-time to when was task fulfilled",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "description": "Current status of the task (`ongoing`, `finished`, `postponed`, `canceled`)",
                        "type": "string",
                        "enum": [
                            "ongoing",
                            "finished",
                            "postponed",
                            "cancelled"
                        ],
                        "example": "ongoing"
                    },
                    "tags": {
                        "description": "Tags attached to the task.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User description",
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the user",
                        "format": "string",
                        "example": "Test User"
                    },
                    "email": {
                        "description": "E-mail address of the user",
                        "format": "string",
                        "example": "test@example.com"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "Unauthenticated": {
                "description": "User not aunthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Not authenticated"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "User unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Not authorized"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Target model not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Not found"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "ValidationError": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "data": {
                                    "description": "Contains array with keys of fields names (such `name`, `email`, `color` etc. according to input data) with an array of errors which was found",
                                    "properties": {
                                        "name": {
                                            "description": "Name of field where the validation errors occured",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The name has already been taken"
                                            }
                                        }
                                    },
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validation error"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Tags",
            "description": "Tags API"
        },
        {
            "name": "Tasks",
            "description": "Tasks API"
        },
        {
            "name": "Users",
            "description": "Users API"
        }
    ]
}